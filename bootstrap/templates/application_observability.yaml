{{- if .Values.observability.enable }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 41.7.4
    helm:
      skipCrds: true
      values: |
        alertmanager:
          config:
            route:
              group_by: ['namespace']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: email
              routes:
              - receiver: email
                matchers:
                  - alertname =~ "InfoInhibitor|Watchdog"
            receivers:
              - name: default
                pagerduty_configs:
                - service_key: {{ .Values.observability.pdkey }}
              - name: 'email'
                email_configs:
                - to: 'receiver_mail_id@gmail.com'
                  from: 'nao-responda@cvm.gov.br'
                  smarthost: mail.intranet.cvm
                  # auth_username: 'mail_id@gmail.com'
                  # auth_identity: 'mail_id@gmail.com'
                  # auth_password: 'password'
        prometheus:
          prometheusSpec:
            retention: {{ .Values.observability.retention }}
            podMonitorSelectorNilUsesHelmValues: true
            serviceMonitorSelectorNilUsesHelmValues: true
            #storageSpec:
             # volumeClaimTemplate:
             #   spec:
             #     storageClassName: {{ .Values.storageClass }}
             #     accessModes: ["ReadWriteOnce"]
             #     resources:
             #       requests:
             #         storage: {{ .Values.observability.storageSize }}
             additionalScrapeConfigs:
               - job_name: kubernetes-service-endpoints
                 kubernetes_sd_configs:
                 - role: service
                 relabel_configs:

              # annotation 'prometheus.io/scrape' must be set to 'true'
                 - action: keep
                   regex: true
                   source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        # service cannot be in kube-system or prom namespaces
                 - action: drop
                   regex: (kube-system|prom)
                   source_labels: [__meta_kubernetes_namespace]
       # allow override of http scheme
                 - action: replace
                   regex: (https?)
                   source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                   target_label: __scheme__
        # allow override of default /metrics path
                 - action: replace
                   regex: (.+)
                   source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                   target_label: __metrics_path__
        # allow override of default port
                 - action: replace
                   regex: ([^:]+)(?::\d+)?;(\d+)
                   replacement: $1:$2
                   source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                   target_label: __address__
                 - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
                 - action: replace
                   source_labels: [__meta_kubernetes_namespace]
                   target_label: kubernetes_namespace
                 - action: replace
                   source_labels: [__meta_kubernetes_service_name]
                   target_label: kubernetes_name
        grafana:
          service:
            # type: LoadBalancer
          additionalDataSources:
            - name: loki
              type: loki
              url: http://loki.observability.svc.cluster.local:3100
            - name: tempo
              type: tempo
              url: http://tempo.observability.svc.cluster.local:3100

    chart: kube-prometheus-stack
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: monitoring
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
{{- end }}
